//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CppGenerator v5.0.0) on 24.10.2024 06:57:03.
// </auto-generated>
//------------------------------------------------------------------------------
#pragma once
#include <coretypes/coretypes.h>
#include "cqdaq/data_center_config.h"
#include <cqdaq/data_center_ptr.h>
#include <cqdaq/io_folder_config_ptr.h>
#include <coretypes/string_ptr.h>




BEGIN_NAMESPACE_CQDAQ


class DataCenterConfigPtr;



END_NAMESPACE_CQDAQ

BEGIN_NAMESPACE_CQDAQ

template <>
struct InterfaceToSmartPtr<daq::IDataCenterConfig>
{
    using SmartPtr = daq::DataCenterConfigPtr;
};


END_NAMESPACE_CQDAQ

BEGIN_NAMESPACE_CQDAQ




class DataCenterConfigPtr : public daq::ObjectPtr<IDataCenterConfig>
{
public:
    using daq::ObjectPtr<IDataCenterConfig>::ObjectPtr;
    //using daq::ObjectPtr<IDataCenterConfig>::operator=;



    DataCenterConfigPtr()
        : daq::ObjectPtr<IDataCenterConfig>()

    {
    }

    DataCenterConfigPtr(daq::ObjectPtr<IDataCenterConfig>&& ptr)
        : daq::ObjectPtr<IDataCenterConfig>(std::move(ptr))

    {
    }

    DataCenterConfigPtr(const daq::ObjectPtr<IDataCenterConfig>& ptr)
        : daq::ObjectPtr<IDataCenterConfig>(ptr)

    {
    }

    DataCenterConfigPtr(const DataCenterConfigPtr& other)
        : daq::ObjectPtr<IDataCenterConfig>(other)

    {
    }

    DataCenterConfigPtr(DataCenterConfigPtr&& other) noexcept
        : daq::ObjectPtr<IDataCenterConfig>(std::move(other))

    {
    }
    
    DataCenterConfigPtr& operator=(const DataCenterConfigPtr& other)
    {
        if (this == &other)
            return *this;

        daq::ObjectPtr<IDataCenterConfig>::operator =(other);


        return *this;
    }

    DataCenterConfigPtr& operator=(DataCenterConfigPtr&& other) noexcept
    {
        if (this == std::addressof(other))
        {
            return *this;
        }


        daq::ObjectPtr<IDataCenterConfig>::operator =(std::move(other));

        return *this;
    }


    
    daq::IoFolderConfigPtr addIoSubFolder(const daq::StringPtr& localId, const daq::IoFolderConfigPtr& parent) const
    {
        if (this->object == nullptr)
            throw daq::InvalidParameterException();

        daq::IoFolderConfigPtr ioFolderConfig;
        auto errCode = this->object->addIoSubFolder(&ioFolderConfig, localId, parent);
        daq::checkErrorInfo(errCode);

        return ioFolderConfig;
    }

#if __has_include(<cqdaq/data_center_config_ptr.custom.h>)
    #include <cqdaq/data_center_config_ptr.custom.h>
#endif
};

END_NAMESPACE_CQDAQ
