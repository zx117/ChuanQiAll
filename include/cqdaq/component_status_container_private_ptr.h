//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CppGenerator v5.0.0) on 20.07.2024 00:55:22.
// </auto-generated>
//------------------------------------------------------------------------------
#pragma once
#include <coretypes/coretypes.h>
#include "cqdaq/component_status_container_private.h"
#include <coretypes/objectptr.h>
#include <coretypes/string_ptr.h>
#include <coretypes/enumeration_ptr.h>




BEGIN_NAMESPACE_CQDAQ


class ComponentStatusContainerPrivatePtr;



END_NAMESPACE_CQDAQ

BEGIN_NAMESPACE_CQDAQ

template <>
struct InterfaceToSmartPtr<daq::IComponentStatusContainerPrivate>
{
    using SmartPtr = daq::ComponentStatusContainerPrivatePtr;
};


END_NAMESPACE_CQDAQ

BEGIN_NAMESPACE_CQDAQ



/*!
 * @ingroup cqdaq_components
 * @addtogroup cqdaq_component_status_container Component status container private
 * @{

 */


/*!
 * @brief Provides access to private methods of the Component status container.

 * Said methods allow for adding new statuses and setting a value for existing statuses stored in
 * the component status container.
 * Status changed Core events are triggered whenever there is a change in the status of the cqDAQ Component.
 */

class ComponentStatusContainerPrivatePtr : public daq::ObjectPtr<IComponentStatusContainerPrivate>
{
public:
    using daq::ObjectPtr<IComponentStatusContainerPrivate>::ObjectPtr;
    //using daq::ObjectPtr<IComponentStatusContainerPrivate>::operator=;



    ComponentStatusContainerPrivatePtr()
        : daq::ObjectPtr<IComponentStatusContainerPrivate>()

    {
    }

    ComponentStatusContainerPrivatePtr(daq::ObjectPtr<IComponentStatusContainerPrivate>&& ptr)
        : daq::ObjectPtr<IComponentStatusContainerPrivate>(std::move(ptr))

    {
    }

    ComponentStatusContainerPrivatePtr(const daq::ObjectPtr<IComponentStatusContainerPrivate>& ptr)
        : daq::ObjectPtr<IComponentStatusContainerPrivate>(ptr)

    {
    }

    ComponentStatusContainerPrivatePtr(const ComponentStatusContainerPrivatePtr& other)
        : daq::ObjectPtr<IComponentStatusContainerPrivate>(other)

    {
    }

    ComponentStatusContainerPrivatePtr(ComponentStatusContainerPrivatePtr&& other) noexcept
        : daq::ObjectPtr<IComponentStatusContainerPrivate>(std::move(other))

    {
    }
    
    ComponentStatusContainerPrivatePtr& operator=(const ComponentStatusContainerPrivatePtr& other)
    {
        if (this == &other)
            return *this;

        daq::ObjectPtr<IComponentStatusContainerPrivate>::operator =(other);


        return *this;
    }

    ComponentStatusContainerPrivatePtr& operator=(ComponentStatusContainerPrivatePtr&& other) noexcept
    {
        if (this == std::addressof(other))
        {
            return *this;
        }


        daq::ObjectPtr<IComponentStatusContainerPrivate>::operator =(std::move(other));

        return *this;
    }


    /*!
     * @brief Adds the new status with given name and initial value.

     * @param name The name of the component status.
     * @param initialValue The initial value of the component status.
     */
    void addStatus(const daq::StringPtr& name, const daq::EnumerationPtr& initialValue) const
    {
        if (this->object == nullptr)
            throw daq::InvalidParameterException();

        auto errCode = this->object->addStatus(name, initialValue);
        daq::checkErrorInfo(errCode);
    }


    /*!
     * @brief Sets the value for the existing component status.

     * @param name The name of the component status.
     * @param value The new value of the component status.
     */
    void setStatus(const daq::StringPtr& name, const daq::EnumerationPtr& value) const
    {
        if (this->object == nullptr)
            throw daq::InvalidParameterException();

        auto errCode = this->object->setStatus(name, value);
        daq::checkErrorInfo(errCode);
    }

#if __has_include(<cqdaq/component_status_container_private_ptr.custom.h>)
    #include <cqdaq/component_status_container_private_ptr.custom.h>
#endif
};

/*!
 * @}
 */


END_NAMESPACE_CQDAQ
