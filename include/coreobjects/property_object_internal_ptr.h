//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CppGenerator v5.0.0) on 20.07.2024 00:54:55.
// </auto-generated>
//------------------------------------------------------------------------------
#pragma once
#include <coretypes/coretypes.h>
#include "coreobjects/property_object_internal.h"
#include <coretypes/objectptr.h>
#include <coreobjects/property_ptr.h>
#include <coretypes/procedure_ptr.h>
#include <coreobjects/property_object_ptr.h>
#include <coretypes/string_ptr.h>




BEGIN_NAMESPACE_CQDAQ


class PropertyObjectInternalPtr;



END_NAMESPACE_CQDAQ

BEGIN_NAMESPACE_CQDAQ

template <>
struct InterfaceToSmartPtr<daq::IPropertyObjectInternal>
{
    using SmartPtr = daq::PropertyObjectInternalPtr;
};


END_NAMESPACE_CQDAQ

BEGIN_NAMESPACE_CQDAQ



/*!
 * @ingroup objects_property_object
 * @addtogroup objects_property_object_obj PropertyObjectInternal
 * @{

 */

class PropertyObjectInternalPtr : public daq::ObjectPtr<IPropertyObjectInternal>
{
public:
    using daq::ObjectPtr<IPropertyObjectInternal>::ObjectPtr;
    //using daq::ObjectPtr<IPropertyObjectInternal>::operator=;



    PropertyObjectInternalPtr()
        : daq::ObjectPtr<IPropertyObjectInternal>()

    {
    }

    PropertyObjectInternalPtr(daq::ObjectPtr<IPropertyObjectInternal>&& ptr)
        : daq::ObjectPtr<IPropertyObjectInternal>(std::move(ptr))

    {
    }

    PropertyObjectInternalPtr(const daq::ObjectPtr<IPropertyObjectInternal>& ptr)
        : daq::ObjectPtr<IPropertyObjectInternal>(ptr)

    {
    }

    PropertyObjectInternalPtr(const PropertyObjectInternalPtr& other)
        : daq::ObjectPtr<IPropertyObjectInternal>(other)

    {
    }

    PropertyObjectInternalPtr(PropertyObjectInternalPtr&& other) noexcept
        : daq::ObjectPtr<IPropertyObjectInternal>(std::move(other))

    {
    }
    
    PropertyObjectInternalPtr& operator=(const PropertyObjectInternalPtr& other)
    {
        if (this == &other)
            return *this;

        daq::ObjectPtr<IPropertyObjectInternal>::operator =(other);


        return *this;
    }

    PropertyObjectInternalPtr& operator=(PropertyObjectInternalPtr&& other) noexcept
    {
        if (this == std::addressof(other))
        {
            return *this;
        }


        daq::ObjectPtr<IPropertyObjectInternal>::operator =(std::move(other));

        return *this;
    }


    
    daq::Bool checkForReferences(const daq::PropertyPtr& property) const
    {
        if (this->object == nullptr)
            throw daq::InvalidParameterException();

        daq::Bool isReferenced;
        auto errCode = this->object->checkForReferences(property, &isReferenced);
        daq::checkErrorInfo(errCode);

        return isReferenced;
    }

    
    void enableCoreEventTrigger() const
    {
        if (this->object == nullptr)
            throw daq::InvalidParameterException();

        auto errCode = this->object->enableCoreEventTrigger();
        daq::checkErrorInfo(errCode);
    }

    
    void disableCoreEventTrigger() const
    {
        if (this->object == nullptr)
            throw daq::InvalidParameterException();

        auto errCode = this->object->disableCoreEventTrigger();
        daq::checkErrorInfo(errCode);
    }

    
    daq::ProcedurePtr getCoreEventTrigger() const
    {
        if (this->object == nullptr)
            throw daq::InvalidParameterException();

        daq::ProcedurePtr trigger;
        auto errCode = this->object->getCoreEventTrigger(&trigger);
        daq::checkErrorInfo(errCode);

        return trigger;
    }

    
    void setCoreEventTrigger(const daq::ProcedurePtr& trigger) const
    {
        if (this->object == nullptr)
            throw daq::InvalidParameterException();

        auto errCode = this->object->setCoreEventTrigger(trigger);
        daq::checkErrorInfo(errCode);
    }

    
    daq::PropertyObjectPtr clone() const
    {
        if (this->object == nullptr)
            throw daq::InvalidParameterException();

        daq::PropertyObjectPtr cloned;
        auto errCode = this->object->clone(&cloned);
        daq::checkErrorInfo(errCode);

        return cloned;
    }

    
    void setPath(const daq::StringPtr& path) const
    {
        if (this->object == nullptr)
            throw daq::InvalidParameterException();

        auto errCode = this->object->setPath(path);
        daq::checkErrorInfo(errCode);
    }

    
    daq::Bool isUpdating() const
    {
        if (this->object == nullptr)
            throw daq::InvalidParameterException();

        daq::Bool updating;
        auto errCode = this->object->isUpdating(&updating);
        daq::checkErrorInfo(errCode);

        return updating;
    }

#if __has_include(<coreobjects/property_object_internal_ptr.custom.h>)
    #include <coreobjects/property_object_internal_ptr.custom.h>
#endif
};

/*!
 * @}
 */


END_NAMESPACE_CQDAQ
