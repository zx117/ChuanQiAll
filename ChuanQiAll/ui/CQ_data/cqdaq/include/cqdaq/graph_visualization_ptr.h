//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CppGenerator v5.0.0) on 20.07.2024 00:55:07.
// </auto-generated>
//------------------------------------------------------------------------------
#pragma once
#include <coretypes/coretypes.h>
#include "cqdaq/graph_visualization.h"
#include <coretypes/objectptr.h>
#include <coretypes/string_ptr.h>




BEGIN_NAMESPACE_CQDAQ


class GraphVisualizationPtr;



END_NAMESPACE_CQDAQ

BEGIN_NAMESPACE_CQDAQ

template <>
struct InterfaceToSmartPtr<daq::IGraphVisualization>
{
    using SmartPtr = daq::GraphVisualizationPtr;
};


END_NAMESPACE_CQDAQ

BEGIN_NAMESPACE_CQDAQ



/*!
 * @ingroup cqdaq_scheduler_components
 * @addtogroup cqdaq_graph_visualization GraphVisualization
 * @{

 */


/*!
 * @brief Represents a way to get a string representation of a graph
 * usually in some diagram description language like DOT, mermaid or D2.

 */

class GraphVisualizationPtr : public daq::ObjectPtr<IGraphVisualization>
{
public:
    using daq::ObjectPtr<IGraphVisualization>::ObjectPtr;
    //using daq::ObjectPtr<IGraphVisualization>::operator=;



    GraphVisualizationPtr()
        : daq::ObjectPtr<IGraphVisualization>()

    {
    }

    GraphVisualizationPtr(daq::ObjectPtr<IGraphVisualization>&& ptr)
        : daq::ObjectPtr<IGraphVisualization>(std::move(ptr))

    {
    }

    GraphVisualizationPtr(const daq::ObjectPtr<IGraphVisualization>& ptr)
        : daq::ObjectPtr<IGraphVisualization>(ptr)

    {
    }

    GraphVisualizationPtr(const GraphVisualizationPtr& other)
        : daq::ObjectPtr<IGraphVisualization>(other)

    {
    }

    GraphVisualizationPtr(GraphVisualizationPtr&& other) noexcept
        : daq::ObjectPtr<IGraphVisualization>(std::move(other))

    {
    }
    
    GraphVisualizationPtr& operator=(const GraphVisualizationPtr& other)
    {
        if (this == &other)
            return *this;

        daq::ObjectPtr<IGraphVisualization>::operator =(other);


        return *this;
    }

    GraphVisualizationPtr& operator=(GraphVisualizationPtr&& other) noexcept
    {
        if (this == std::addressof(other))
        {
            return *this;
        }


        daq::ObjectPtr<IGraphVisualization>::operator =(std::move(other));

        return *this;
    }


    /*!
     * @brief Returns the graph representation as a string.

     * @returns Graph's string representation
     */
    daq::StringPtr dump() const
    {
        if (this->object == nullptr)
            throw daq::InvalidParameterException();

        daq::StringPtr dot;
        auto errCode = this->object->dump(&dot);
        daq::checkErrorInfo(errCode);

        return dot;
    }

#if __has_include(<cqdaq/graph_visualization_ptr.custom.h>)
    #include <cqdaq/graph_visualization_ptr.custom.h>
#endif
};

/*!
 * @}
 */


END_NAMESPACE_CQDAQ
