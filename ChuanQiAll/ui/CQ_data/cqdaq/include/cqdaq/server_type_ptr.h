//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     RTGen (CppGenerator v5.0.0) on 20.07.2024 00:55:53.
// </auto-generated>
//------------------------------------------------------------------------------
#pragma once
#include <coretypes/coretypes.h>
#include "cqdaq/server_type.h"
#include <coreobjects/component_type_ptr.h>




BEGIN_NAMESPACE_CQDAQ


class ServerTypePtr;



END_NAMESPACE_CQDAQ

BEGIN_NAMESPACE_CQDAQ

template <>
struct InterfaceToSmartPtr<daq::IServerType>
{
    using SmartPtr = daq::ServerTypePtr;
};


END_NAMESPACE_CQDAQ

BEGIN_NAMESPACE_CQDAQ



/*!
 * @ingroup structure_servers
 * @addtogroup structure_server_type Server type
 * @{

 */


/*!
 * @brief Provides information about the server.

 */

class ServerTypePtr : public GenericComponentTypePtr<IServerType>
{
public:
    using GenericComponentTypePtr<IServerType>::GenericComponentTypePtr;
    //using GenericComponentTypePtr<IServerType>::operator=;



    ServerTypePtr()
        : GenericComponentTypePtr<IServerType>()

    {
    }

    ServerTypePtr(daq::ObjectPtr<IServerType>&& ptr)
        : GenericComponentTypePtr<IServerType>(std::move(ptr))

    {
    }

    ServerTypePtr(const daq::ObjectPtr<IServerType>& ptr)
        : GenericComponentTypePtr<IServerType>(ptr)

    {
    }

    ServerTypePtr(const ServerTypePtr& other)
        : GenericComponentTypePtr<IServerType>(other)

    {
    }

    ServerTypePtr(ServerTypePtr&& other) noexcept
        : GenericComponentTypePtr<IServerType>(std::move(other))

    {
    }
    
    ServerTypePtr& operator=(const ServerTypePtr& other)
    {
        if (this == &other)
            return *this;

        GenericComponentTypePtr<IServerType>::operator =(other);


        return *this;
    }

    ServerTypePtr& operator=(ServerTypePtr&& other) noexcept
    {
        if (this == std::addressof(other))
        {
            return *this;
        }


        GenericComponentTypePtr<IServerType>::operator =(std::move(other));

        return *this;
    }




#if __has_include(<cqdaq/server_type_ptr.custom.h>)
    #include <cqdaq/server_type_ptr.custom.h>
#endif
};

/*!
 * @}
 */


/*!
 * @ingroup structure_server_type
 * @addtogroup structure_server_type_factories Factories
 * @{

 */


/*!
 * @}
 */


END_NAMESPACE_CQDAQ
